{
  "openapi": "3.0.0",
  "info": {
    "title": "Reporting",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.salemove.com",
      "description": "Glia REST API base URL"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/reporting/engagements": {
      "post": {
        "summary": "Engagement leg counts",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of engagement leg counts. The endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case the endpoint returns engagement leg counts for engagements which resulted from any of the specified\nqueues.\n\nOptionally the parameter `team_ids` can be provided.\n* In this case the endpoint returns engagement leg counts only for the operators belonging to the specified teams.\n\nEngagement leg counts are grouped by the highest media used by the operator during the engagement.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs. Must not be empty.",
                        "items": {
                          "type": "string",
                          "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                        }
                      },
                      "team_ids": {
                        "type": "array",
                        "description": "A list of team IDs. All teams must belong to provided sites.\n",
                        "items": {
                          "type": "string",
                          "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                        }
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                        "items": {
                          "type": "string",
                          "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                        "example": "2017-06-28T00:00:00.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                        "example": "2017-06-29T00:00:00.000Z"
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Defines the granularity to bucket query results.\n",
                        "example": "day",
                        "enum": [
                          "month",
                          "week",
                          "day",
                          "hour"
                        ]
                      }
                    },
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date",
                      "granularity"
                    ]
                  },
                  {
                    "properties": {
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "If `true`, includes results that are not associated with any queues.\nIf `false`, excludes results that are not associated with queues.\nDefault value is `true`.\n",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Count of engagements during the period. Elements are described below.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Count of chat engagements.",
                            "example": 20
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Count of audio/video engagements.",
                            "example": 15
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "description": "Total count of chat engagements during the period.\n",
                      "example": 65
                    },
                    "audio_video": {
                      "type": "integer",
                      "description": "Total count of audio/video engagements during the period.\n",
                      "example": 36
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total count of engagements during the period.\n",
                      "example": 101
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/queued_visitors": {
      "post": {
        "summary": "Queued visitor count",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of counts of visitors queued for engagements, regardless of whether waiting in queue eventually\nresulted in engagement or not.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the count of visitors queued for engagements in case any of the specified queues are returned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return queued visitors\ncounts aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this case only the count of visitors queued for engagements in any of the specified teams are returned.\n* E.g. if team_ids was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return counts of\nvisitors that were queued to have engagements with team `5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also\ninclude all visitors that were queued to have engagements with this team.\n\nQueued visitor counts are grouped by media requested by the visitor.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  },
                  "granularity": {
                    "type": "string",
                    "description": "Defines the granularity to bucket query results.\n",
                    "example": "day",
                    "enum": [
                      "month",
                      "week",
                      "day",
                      "hour"
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date",
                  "granularity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Count of queued visitors during the period. Elements are described below.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Count of queued visitros for chat engagements.\n",
                            "example": 20
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Count of queued visitros for audio/video engagements.\n",
                            "example": 15
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "description": "Total count of visitors queued for chat engagements during the period.\n",
                      "example": 65
                    },
                    "audio_video": {
                      "type": "integer",
                      "description": "Total count of visitors queued for audio/video engagements during the period.\n",
                      "example": 36
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total count of queued visitors during the period.\n",
                      "example": 101
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/average_wait_time": {
      "post": {
        "summary": "Average wait time",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of average times visitors spent in queue before being engaged with.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the average wait time of visitors queued for engagements in any of the specified queues are\nreturned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return average wait\ntimes aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this which case only the average wait time of visitors queued for engagements in any of the specified teams\nare returned.\n* E.g. if `team_ids` was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return average\nwait times aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nAverage wait times are grouped by media requested by the visitor.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  },
                  "granularity": {
                    "type": "string",
                    "description": "Defines the granularity to bucket query results.\n",
                    "example": "day",
                    "enum": [
                      "month",
                      "week",
                      "day",
                      "hour"
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date",
                  "granularity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Average wait times during the period. Elements are described below.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Average wait time of visitors queued for chat engagements in seconds.\n",
                            "example": 60
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Average wait time of visitor queued for audio/video engagements in seconds.\n",
                            "example": 45
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "description": "Total average wait time for chat engagements during the period in seconds.\n",
                      "example": 40
                    },
                    "audio_video": {
                      "type": "integer",
                      "description": "Total average wait time for audio/video engagements during the period in seconds.\n",
                      "example": 50
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total average wait time during the period in seconds.\n",
                      "example": 90
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/max_wait_time": {
      "post": {
        "summary": "Maximum wait time",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of the maximum times a visitor spent in queue before being engaged with.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this which case only the maximum wait times of visitors queued for engagements in any of the specified\nqueues are returned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return maximum wait\ntimes aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this case only the maximum wait times of visitors queued for engagements in any of the specified teams are\nreturned.\n* E.g. if `team_ids` was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return maximum\nwait times aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nMaximum wait times are grouped by media requested by the visitor.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  },
                  "granularity": {
                    "type": "string",
                    "description": "Defines the granularity to bucket query results.\n",
                    "example": "day",
                    "enum": [
                      "month",
                      "week",
                      "day",
                      "hour"
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date",
                  "granularity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Max wait times during the period. Elements are described below.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Maximum wait time of visitors queued for chat engagements in seconds.\n",
                            "example": 120
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Maximum wait time of visitor queued for audio/video engagements in seconds.\n",
                            "example": 110
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "description": "Maximum wait time for chat engagements during the period in seconds.\n",
                      "example": 120
                    },
                    "audio_video": {
                      "type": "integer",
                      "description": "Maximum wait time for audio/video engagements during the period in seconds.\n",
                      "example": 145
                    },
                    "total": {
                      "type": "integer",
                      "description": "Maximum wait time during the period in seconds.",
                      "example": 145
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/abandonment_rate": {
      "post": {
        "summary": "Abandonment rates",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of abandonment rates for the period requested. Abandonment rate is the percentage of visitors\nwho leave the queue before being able to establish an engagement.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the abandonment rate of visitors queued for engagements in any of the specified queues are\nreturned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return abandonment\nrates aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this case only the abandonment rate of visitors queued for engagements in any of the specified teams are\nreturned.\n* E.g. if `team_ids` was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return\nabandonment rates aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nAbandonment rates are grouped by media requested by the visitor.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  },
                  "granularity": {
                    "type": "string",
                    "description": "Defines the granularity to bucket query results.\n",
                    "example": "day",
                    "enum": [
                      "month",
                      "week",
                      "day",
                      "hour"
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date",
                  "granularity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Abandonment rates during the period. Elements are described below.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Abandonment rate of visitors queued for chat engagements, expressed as a percentage. Possible values\nrange from 0 to 100.\n",
                            "example": 10
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Abandonment rate of visitor queued for audio/video engagements, expressed as a percentage. Possible\nvalues range from 0 to 100.\n",
                            "example": 20
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "description": "Total abandonment rate for visitors queued for chat engagements during the period, expressed a percentage.\nPossible values ranges from 1 to 100.\n",
                      "example": 7
                    },
                    "audio_video": {
                      "type": "integer",
                      "description": "Total abandonment rate for visitors queued for audio/video engagements during the period, expressed a\npercentage. Possible values ranges from 1 to 100.\n",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total abandonment rate during the period, expressed as a percentage.\nPossible values range from 0 to 100.\n",
                      "example": 8
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/service_level": {
      "post": {
        "summary": "Service levels",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of service levels.\n\nService level represents a percentage of the engagements that were started before a certain amount of time. For\nexample, when one engagement is started after `5` seconds, three engagements are started after 15 seconds and\nservice level threshold is set to `10` seconds, the service level would be `25%`.\n\nService level time threshold can be configured per site.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the service levels for visitors that waited in any of the specified queues are returned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return service levels\naggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this case only the service levels for visitors queued for any of the specified team are returned.\n* E.g. if `team_ids` was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return service\nlevels aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nThe requester must have access to the sites. All specified queues and teams must belong to the sites.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  },
                  "granularity": {
                    "type": "string",
                    "description": "Defines the granularity to bucket query results.\n",
                    "example": "day",
                    "enum": [
                      "month",
                      "week",
                      "day",
                      "hour"
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date",
                  "granularity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Service levels during the period. Elements are described below.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Chat service level during the period, expressed as a percentage.\nPossible values range from 0 to 100.\n",
                            "example": 86
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Audio/Video service level during the period, expressed as a percentage.\nPossible values range from 0 to 100.\n",
                            "example": 60
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "example": 85,
                      "description": "Chat service level during the period, expressed a percentage.\nPossible values ranges from 1 to 100.\n"
                    },
                    "audio_video": {
                      "type": "integer",
                      "example": 64,
                      "description": "Audio/Video service level during the period, expressed a percentage.\nPossible values ranges from 1 to 100.\n"
                    },
                    "total": {
                      "type": "integer",
                      "example": 80,
                      "description": "Total service level during the period, expressed as a percentage.\nPossible values range from 0 to 100.\n"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/average_handling_time": {
      "post": {
        "summary": "Average durations",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns an array of average engagement durations in seconds.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case the endpoint returns average engagement durations for engagements which resulted from any of the\nspecified queues.\n\nOptionally the parameter `team_ids` can be provided.\n* In this case the endpoint returns average engagement durations only for operators that belong to any of the\nspecified teams.\n\n* Maximum number of datapoints returned for any time period: 400.\n    - Requests that would return more than 400 datapoints are rejected.\n    - To get around this restriction you can: reduce granularity and/or reduce period.\n* Downloading data in CSV: specify the header `Accept: application/vnd.salemove.v1+csv`.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs. Must not be empty.",
                        "items": {
                          "type": "string",
                          "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                        }
                      },
                      "team_ids": {
                        "type": "array",
                        "description": "A list of team IDs. All teams must belong to provided sites.\n",
                        "items": {
                          "type": "string",
                          "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                        }
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                        "items": {
                          "type": "string",
                          "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                        }
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                        "example": "2017-06-28T00:00:00.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                        "example": "2017-06-29T00:00:00.000Z"
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Defines the granularity to bucket query results.\n",
                        "example": "day",
                        "enum": [
                          "month",
                          "week",
                          "day",
                          "hour"
                        ]
                      }
                    },
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date",
                      "granularity"
                    ]
                  },
                  {
                    "properties": {
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "If `true`, includes results that are not associated with any queues.\nIf `false`, excludes results that are not associated with queues.\nDefault value is `true`.\n",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Average engagement durations during the period. Elements are described below.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                            "example": "2017-06-28T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                            "example": "2017-06-29T00:00:00.000Z"
                          },
                          "chat": {
                            "type": "integer",
                            "description": "Average chat engagement duration during the period in seconds.\n",
                            "example": 120
                          },
                          "audio_video": {
                            "type": "integer",
                            "description": "Average audio/video engagement duration during the period in seconds.\n",
                            "example": 150
                          }
                        }
                      }
                    },
                    "chat": {
                      "type": "integer",
                      "example": 100,
                      "description": "Average chat engagement duration during the period in seconds.\n"
                    },
                    "audio_video": {
                      "type": "integer",
                      "example": 120,
                      "description": "Average audio/video engagement duration during the period in seconds.\n"
                    },
                    "total": {
                      "type": "integer",
                      "example": 110,
                      "description": "Total average engagement duration during the period in seconds.\n"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/operators": {
      "post": {
        "summary": "Operators",
        "tags": [
          "Historical reporting"
        ],
        "description": "Returns a list of operators belonging to the queried sites and teams and their respective reporting statistics.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `team_ids` can be provided.\n* In this case only the data for operators belonging to the specified teams is returned. The requester must have\naccess to the sites and all specified teams must belong to the sites.\n\nBy specifying the `Accept` header application/vnd.salemove.v1+csv data will be returned in CSV format.\n* The sub-keys in column names of CSV output are separated by `/` delimiter.\n* All team names are grouped under one column, separated by `;` delimiter.\n\nVirtual assistants did not record `available_time` and `unavailable_time` before 2020-04-01.\n\nNote that unlike other /reporting endpoints, the POST `/reporting/operators`  does not require the `granularity`\nparameter.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "start_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query start date (inclusive).\n",
                    "example": "2017-06-28T00:00:00.000Z"
                  },
                  "end_date": {
                    "type": "string",
                    "description": "An ISO-8601 timestamp. Defines the query end date (inclusive).\n",
                    "example": "2017-06-29T00:00:00.000Z"
                  }
                },
                "required": [
                  "site_ids",
                  "start_date",
                  "end_date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operators": {
                      "type": "array",
                      "description": "Historical data for operators.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Operator ID.",
                            "example": "c8b52f0b-ad05-4c71-8c98-5056f07c4d1a"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the operator.",
                            "example": "Operator One"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the operator.",
                            "example": "operatorone@example.com"
                          },
                          "picture_url": {
                            "type": "string",
                            "description": "Current operator picture. `null` if no picture is currently set.\n",
                            "example": "https://picture.url.com/operator_one_picture.jpg"
                          },
                          "teams": {
                            "type": "array",
                            "description": "Array of the teams the operator belongs to. Elements described below.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Team name.",
                                  "example": "Team One"
                                }
                              }
                            }
                          },
                          "stats": {
                            "type": "object",
                            "description": "Operator's reporting statistics for the requested time period. Elements described below.\n",
                            "properties": {
                              "engagement_count": {
                                "type": "object",
                                "description": "Object representing the count of engagements the operator has participated in. Elements described below.\n",
                                "properties": {
                                  "chat": {
                                    "example": 20,
                                    "type": "integer",
                                    "description": "Count of chat engagements the operator has participated in during the requested time period.\n"
                                  },
                                  "audio_video": {
                                    "example": 10,
                                    "type": "integer",
                                    "description": "Count of audio/video engagements the operator has participated in during the requested time period.\n"
                                  },
                                  "total": {
                                    "example": 30,
                                    "type": "integer",
                                    "description": "Total count of engagements the operator has participated in during the requested time period.\n"
                                  }
                                }
                              },
                              "engagement_request_outcomes_count": {
                                "type": "object",
                                "description": "Object representing the set of data about certain operator’s engagement requests outcomes. The elements are\ndescribed below.\n",
                                "properties": {
                                  "reactive": {
                                    "type": "object",
                                    "properties": {
                                      "accepted": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests accepted by the operator.\n",
                                        "example": 16
                                      },
                                      "rejected": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests rejected by the operator.\n",
                                        "example": 1
                                      },
                                      "timed_out": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests that timed out before being accepted by the operator.\n",
                                        "example": 3
                                      },
                                      "visitor_cancel": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests to the operator cancelled by visitor.\n",
                                        "example": 2
                                      },
                                      "operator_left": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests during which the operator left.\n",
                                        "example": 0
                                      },
                                      "visitor_left": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests to the operator during which visitor left.\n",
                                        "example": 0
                                      },
                                      "total": {
                                        "type": "integer",
                                        "description": "Count of reactive engagement requests to the operator during which visitor left.\n",
                                        "example": 22
                                      }
                                    }
                                  },
                                  "proactive": {
                                    "type": "object",
                                    "properties": {
                                      "accepted": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator accepted by a visitor.\n",
                                        "example": 10
                                      },
                                      "rejected": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator rejected by a visitor.\n",
                                        "example": 1
                                      },
                                      "timed_out": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator that timed out before being accepted\nby a visitor.\n",
                                        "example": 1
                                      },
                                      "operator_cancel": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests cancelled by the operator.\n",
                                        "example": 2
                                      },
                                      "operator_left": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator during which the operator left.\n",
                                        "example": 0
                                      },
                                      "visitor_left": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator during which visitor left.\n",
                                        "example": 0
                                      },
                                      "total": {
                                        "type": "integer",
                                        "description": "Count of proactive engagement requests created by the operator during which visitor left.\n",
                                        "example": 14
                                      }
                                    }
                                  }
                                }
                              },
                              "available_while_engaged_time": {
                                "type": "integer",
                                "example": 120,
                                "description": "Time operator has been in engagements while being available for other engagements during the requested time\nperiod (in seconds).\n"
                              },
                              "available_time": {
                                "type": "object",
                                "description": "Object representing the time operator has been available for engagements. Elements described below.\n",
                                "properties": {
                                  "audio_video": {
                                    "type": "integer",
                                    "example": 125,
                                    "description": "Time operator has been available for audio/video engagements during the requested time period (in seconds).\n"
                                  },
                                  "chat": {
                                    "type": "integer",
                                    "example": 500,
                                    "description": "Time operator has been available for chat engagements during the requested time period (in seconds).\n"
                                  }
                                }
                              },
                              "unavailable_time": {
                                "type": "object",
                                "description": "Object representing the time operator has been unavailable for new engagements. Elements described below. Values\nin unavailable_time object indicate time the operator has been unavailable for new engagements. This list is not\nall-inclusive as each site can be configured to have its own unavailability types. All entries valued `0` are\nomitted (with the exception of `total`, which is always present).\n",
                                "properties": {
                                  "engaged": {
                                    "type": "integer",
                                    "description": "Time operator has been in engagements during the requested time period (in seconds).\n",
                                    "example": 900
                                  },
                                  "post_engagement": {
                                    "type": "integer",
                                    "description": "Time operator has spent being in post-engagement during the requested time period (in seconds).\n",
                                    "example": 100
                                  },
                                  "advanced_admin": {
                                    "type": "integer",
                                    "description": "Time operator has spent being in Admin Console during the requested time period (in seconds).\n",
                                    "example": 100
                                  },
                                  "idle": {
                                    "type": "integer",
                                    "description": "Time operator has spent being idle during the requested time period (in seconds). Operator is set to \"Idle\"\nafter a missed engagement or transfer request if \"Automatic missed call unavailability\" option is\nenabled for the site.\n",
                                    "example": 2000
                                  },
                                  "...": {
                                    "type": "integer",
                                    "description": "Any other status the operator has set for the reason of being unavailable for engagements (in seconds). These\nstatuses include (but are not limited to) `meal_break`, `restroom`, `quick_break`, `training` and\nwith_customer`.\n",
                                    "example": 3045
                                  },
                                  "total": {
                                    "type": "integer",
                                    "description": "Total time operator has spent being unavailable during the requested time period (in seconds).\n",
                                    "example": 6145
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/engagements/live/count": {
      "post": {
        "summary": "Engagement count",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the count of text, audio, video and total **ongoing** engagements for provided sites and teams.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `team_ids` can be provided.\n* In this case only the count of engagements for operators belonging to the specified teams is returned.\n\nThe requester must have at least the manager role on the sites, and all specified teams must belong to the sites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  }
                },
                "required": [
                  "site_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "description": "Number of ongoing text (chat) engagements for provided sites and teams.\n",
                      "example": 5
                    },
                    "audio": {
                      "type": "integer",
                      "description": "Number of ongoing audio engagements for provided sites and teams.\n",
                      "example": 2
                    },
                    "video": {
                      "type": "integer",
                      "description": "Number of ongoing video engagements for provided sites and teams.\n",
                      "example": 1
                    },
                    "total": {
                      "type": "integer",
                      "description": "Number of all ongoing engagements for provided sites and teams.\n",
                      "example": 15
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/live/queue/visitor_count": {
      "post": {
        "summary": "Queued visitors count",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the number of visitors who are **currently** waiting in a queue. The response includes a total count of\nall visitors and separate counts for visitors queued for engagements with a specific media type.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the counts of visitors waiting in any of the specified queues are returned.\n* E.g. if `queue_ids` was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return counts of\nvisitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter team_ids can be provided.\n* In this case only the counts of visitors queued for any of the specified teams are returned.\n* E.g. if team_ids was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return counts of\nvisitors that were queued to have engagements with team `5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also\ninclude all visitors that were queued to have engagements with this team.\n\nThe requester must have at least the manager role on the sites. All specified queues and teams must belong to the\nsites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  }
                },
                "required": [
                  "site_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "example": 10,
                      "description": "Count of visitors queued for chat engagements."
                    },
                    "audio": {
                      "example": 15,
                      "type": "integer",
                      "description": "Count of visitors queued for audio engagements."
                    },
                    "video": {
                      "type": "integer",
                      "description": "Count of visitors queued for video engagements.",
                      "example": 15
                    },
                    "total": {
                      "type": "integer",
                      "description": "Count of queued visitors.",
                      "example": 45
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/live/queue/average_wait_time": {
      "post": {
        "summary": "Average wait time",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the average waiting duration among **currently** queued visitors. The response includes the total average\nwaiting time for all visitors and separate waiting times for visitors waiting for engagements with a specific\nmedia type.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the average wait times of visitors waiting in any of the specified queues are returned.\n* E.g. if queue_ids was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return average wait\ntimes aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter `team_ids` can be provided.\n* In this case only the average wait times of visitors queued for any of the specified teams are returned.\n* E.g. if team_ids was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return average\nwait times aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nThe requester must have at least the manager role on the sites. All specified queues and teams must belong to the\nsites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  }
                },
                "required": [
                  "site_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "example": 45,
                      "description": "Average wait time of visitors queued for chat engagements (in seconds).\n"
                    },
                    "audio": {
                      "type": "integer",
                      "example": 20,
                      "description": "Average wait time of visitors queued for audio engagements (in seconds).\n"
                    },
                    "video": {
                      "type": "integer",
                      "example": 32,
                      "description": "Average wait time of visitors queued for video engagements (in seconds).\n"
                    },
                    "audio_video": {
                      "type": "integer",
                      "example": 22,
                      "description": "Average wait time of visitors queued for audio/video engagements (in seconds).\n"
                    },
                    "total": {
                      "type": "integer",
                      "example": 37,
                      "description": "Total average wait time of queued visitors (in seconds)."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/reporting/live/queue/max_wait_time": {
      "post": {
        "summary": "Maximum wait time",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the longest waiting duration among **currently** queued visitors. The response includes the maximum\nwaiting time for any visitor and separate waiting times for visitors waiting for engagements with a specific\nmedia type.\n\nThe endpoint requires a list of `site_ids`.\n\nOptionally the parameter `queue_ids` can be provided.\n* In this case only the maximum wait times of visitors waiting in any of the specified queues are returned.\n* E.g. if queue_ids was `[\"ce06d2a0-f9cf-4e4b-91b8-92a0543462a7\"]`, then the request would return maximum\nwait times aggregated over visitors that were queued in queue `ce06d2a0-f9cf-4e4b-91b8-92a0543462a7`.\n\nAlso, optionally the parameter team_ids can be provided.\n* In this case only the maximum wait times of visitors queued for any of the specified teams are returned.\n* E.g. if team_ids was set to `[\"5db50064-8bf8-4c4a-98fc-79cd04a089c5\"]`, then the request would return maximum\nwait times aggregated over visitors that were queued to have engagements with team\n`5db50064-8bf8-4c4a-98fc-79cd04a089c5`. This would also include all visitors that were queued to have engagements\nwith this team.\n\nThe requester must have at least manager role on the sites. All specified queues and teams must belong to the\nsites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "queue_ids": {
                    "type": "array",
                    "description": "A list of queue IDs. All queues must belong to the provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "afac4462-c950-4fd4-b245-3c12e4427e7b"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  }
                },
                "required": [
                  "site_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "example": 45,
                      "description": "Maximum wait time of visitors queued for chat engagements (in seconds).\n"
                    },
                    "audio": {
                      "type": "integer",
                      "example": 20,
                      "description": "Maximum wait time of visitors queued for audio engagements (in seconds).\n"
                    },
                    "video": {
                      "type": "integer",
                      "example": 32,
                      "description": "Maximum wait time of visitors queued for video engagements (in seconds).\n"
                    },
                    "any": {
                      "type": "integer",
                      "example": 45,
                      "description": "Maximum wait time of visitors queued for any kind of engagements (in seconds).\n"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/operators/engaged/count": {
      "post": {
        "summary": "Engaged operators count",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the number of operators who are **currently** engaged.\n\nThe response includes a total count of all operators and separate counts for operators engaged using a specific\nmedia type. The requester must have access to the sites. All specified teams must belong to the sites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "include_support": {
                    "type": "boolean",
                    "description": "If `true`, includes operators from Glia support staff.\n",
                    "default": false,
                    "enum": [
                      true,
                      false
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "team_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "example": 3
                    },
                    "audio": {
                      "type": "integer",
                      "example": 2
                    },
                    "video": {
                      "type": "integer",
                      "example": 1
                    },
                    "total": {
                      "type": "integer",
                      "example": 7
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    },
    "/operators/unengaged/count": {
      "post": {
        "summary": "Unengaged operators count",
        "tags": [
          "Live reporting"
        ],
        "description": "Returns the number of operators who are **currently** not engaged.\n\nThe response includes a total count of all operators and separate counts for operators who are unengaged but\navailable for a specific media type as well as operators who are unavailable.\n\nThe requester must have access to the sites. All specified teams must belong to the sites.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_ids": {
                    "type": "array",
                    "description": "A list of site IDs. Must not be empty.",
                    "items": {
                      "type": "string",
                      "example": "6aab7607-c7eb-4edf-aeb2-dcc4c4180989"
                    }
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "A list of team IDs. All teams must belong to provided sites.\n",
                    "items": {
                      "type": "string",
                      "example": "9125c069-cef2-469d-b3fc-341493bcc1c0"
                    }
                  },
                  "include_support": {
                    "type": "boolean",
                    "description": "If `true`, includes operators from Glia support staff.\n",
                    "default": false,
                    "enum": [
                      true,
                      false
                    ]
                  }
                },
                "required": [
                  "site_ids",
                  "team_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chat": {
                      "type": "integer",
                      "example": 3
                    },
                    "audio": {
                      "type": "integer",
                      "example": 2
                    },
                    "video": {
                      "type": "integer",
                      "example": 1
                    },
                    "unavailable": {
                      "type": "integer",
                      "example": 1
                    },
                    "total": {
                      "type": "integer",
                      "example": 7
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. Endpoint is rate limited and limit is exceeded. Endpoint was called more than 5 times in a\nsecond by the same user.\n"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
