{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Management",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.salemove.com",
      "description": "Glia REST API base URL"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/omniguide/engines": {
      "post": {
        "summary": "Create engine",
        "tags": [
          "Engines"
        ],
        "description": " Creates a new AI engine for a site.\nSupported engine types:\n* [Amazon Lex](https://docs.aws.amazon.com/lex/latest/dg/getting-started.html)\n* [Google Dialogflow](https://cloud.google.com/dialogflow/es/docs/reference/rest/v2-overview)\n* [Microsoft Azure](https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0)\n* [IBM Bluemix and Watson](https://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial)\n* Custom ",
        "requestBody": {
          "description": "The engine's configuration.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "site_id": {
                        "type": "string",
                        "description": "The ID of the site the engine will belong to.\n",
                        "example": "def34343-s888-43ae-99e0-07a676e9a111"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name of the engine to distinguish it from the other engines.\n",
                        "example": "Lex Test Engine"
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional description of the engine, to give deeper input of its configuration or use cases.\n",
                        "example": "The only Lex engine configured for this site."
                      },
                      "provider": {
                        "oneOf": [
                          {
                            "allOf": [
                              {
                                "title": "Amazon Lex"
                              },
                              {
                                "required": [
                                  "type",
                                  "region",
                                  "bot_name",
                                  "bot_alias",
                                  "key_id",
                                  "access_key"
                                ],
                                "type": "object",
                                "description": "Properties of the Amazon Lex bot that the engine will be based on.\n\nSee also Amason Lex documentation at https://docs.aws.amazon.com/lex/latest/dg/getting-started.html\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "lex"
                                        ]
                                      }
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Region of the Lex bot.\n\nCan be found in the Lex bot's URL as the value of region key.\n",
                                    "example": "us-east-1"
                                  },
                                  "bot_name": {
                                    "type": "string",
                                    "description": "The name of the Lex bot you would like to attach to the engine.\n\nCan be found in the Lex bot settings.\n",
                                    "example": "Bob"
                                  },
                                  "bot_alias": {
                                    "type": "string",
                                    "description": "The Lex bot alias.\n\nCreated and found in the Lex bot settings.\n",
                                    "example": "versionOne"
                                  },
                                  "key_id": {
                                    "type": "string",
                                    "description": "ID of the Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                  },
                                  "access_key": {
                                    "type": "string",
                                    "description": "The Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Google Dialogflow"
                              },
                              {
                                "required": [
                                  "type",
                                  "project_id",
                                  "client_email",
                                  "private_key",
                                  "confidence_level"
                                ],
                                "type": "object",
                                "description": "Properties of the Google Dialogflow bot that the engine will be based on.\n\nGlia's AI Management uses Dialogflow API V2 for communication,\nsee https://cloud.google.com/dialogflow-enterprise/docs/reference/rest/v2-overview\n\nPrivate key in JSON format, associated with the Dialogflow service account, is needed to extract all necessary\nconfiguration parameters to create an engine.\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "dialogflow"
                                        ]
                                      }
                                    ]
                                  },
                                  "project_id": {
                                    "type": "string",
                                    "description": "Dialogflow project's ID:\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "dialog-agent-23"
                                  },
                                  "client_email": {
                                    "type": "string",
                                    "description": "E-mail associated to the Dialogflow bot.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "john.smith@example.com"
                                  },
                                  "private_key": {
                                    "type": "string",
                                    "description": "The Dialogflow bot's private key.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "----- BEGIN PRIVATE KEY ---- ..."
                                  },
                                  "confidence_level": {
                                    "type": "integer",
                                    "description": "The threshold the Dialogflow bot uses to process each response.\n\nIf the confidence returned by the engine is below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "example": 68,
                                    "default": 0
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "Dialogflow bot languages that Glia supports.\n",
                                    "enum": [
                                      "en",
                                      "de",
                                      "da",
                                      "es",
                                      "fr"
                                    ],
                                    "example": "de",
                                    "default": "en"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Microsoft Azure"
                              },
                              {
                                "required": [
                                  "type",
                                  "secret_key"
                                ],
                                "type": "object",
                                "description": " Properties of the Microsoft Azure bot that the engine will be based on.\nGlia's AI Management module uses Azure’s Direct Line API 3.0 for communication, see https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0 ",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "azure"
                                        ]
                                      }
                                    ]
                                  },
                                  "secret_key": {
                                    "type": "string",
                                    "description": "The Azure bot secret key.\n\nCan be generated and found in the bot's Direct Line channel section.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "IBM Bluemix and Watson"
                              },
                              {
                                "required": [
                                  "type",
                                  "workspace_id",
                                  "confidence_level",
                                  "api_key"
                                ],
                                "type": "object",
                                "description": "Properties of the IBM Watson bot that the engine will be based on.\n\n* AI Management uses IBM Watson Assistant API for communication,\nsee https://console.bluemix.net/apidocs/assistant\n* See Bluemix documentation on how to setup the Watson Assistant:\nhttps://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "bluemix"
                                        ]
                                      }
                                    ]
                                  },
                                  "workspace_id": {
                                    "type": "string",
                                    "description": "The ID of the Watson bot's workspace.\n\nCan be found in Watson assistant tool's deployment Credentials section\n"
                                  },
                                  "confidence_level": {
                                    "type": "number",
                                    "description": "The threshold used by the Watson bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "example": 0.75
                                  },
                                  "api_key": {
                                    "type": "string",
                                    "description": "The Watson bot's API key.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Custom"
                              },
                              {
                                "required": [
                                  "type",
                                  "endpoint_url",
                                  "confidence_level"
                                ],
                                "type": "object",
                                "description": "Properties of the bot from the custom NLP provider.\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "custom"
                                        ]
                                      }
                                    ]
                                  },
                                  "endpoint_url": {
                                    "type": "string",
                                    "description": "Endpoint URL used by AI Management to send REST API requests (e.g. visitor's utterances) to the AI framework.\n\nAllowed protocol type: HTTPS.\n",
                                    "example": "https://example.com/custom/ai/framework/endpoint"
                                  },
                                  "vendor": {
                                    "type": "string",
                                    "description": "Optional name of the custom NLP service provider.\n",
                                    "example": "BotsUnlimited",
                                    "default": "custom"
                                  },
                                  "headers": {
                                    "type": "array",
                                    "description": "A set of key-value pairs that are sent as HTTP headers along with the REST request.\n",
                                    "items": {
                                      "type": "object",
                                      "description": "Key-value pair to represent the HTTP header.\n",
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "example": "Authentication: Basic integrator_username:integrator_password"
                                    },
                                    "minItems": 0,
                                    "maxItems": 3
                                  },
                                  "confidence_level": {
                                    "type": "number",
                                    "description": "The threshold used by the custom bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "example": 0.85,
                                    "default": 0
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "site_id",
                      "name",
                      "provider"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\n\nEngine succesfully created.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The engine's unique ID.\n",
                      "example": "abc12121-c223-461c-8659-d2362223433e"
                    },
                    "site_id": {
                      "type": "string",
                      "description": "The ID of the site the engine will belong to.\n",
                      "example": "def34343-s888-43ae-99e0-07a676e9a111"
                    },
                    "name": {
                      "type": "string",
                      "description": "Descriptive name of the engine to distinguish it from the other engines.\n",
                      "example": "Lex Test Engine"
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional description of the engine, to give deeper input of its configuration or use cases.\n",
                      "example": "The only Lex engine configured for this site."
                    },
                    "provider": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "title": "Amazon Lex"
                            },
                            {
                              "required": [
                                "type",
                                "region",
                                "bot_name",
                                "bot_alias"
                              ],
                              "type": "object",
                              "description": "Properties of the Amazon Lex bot that the engine will be based on.\n\nSee also Amason Lex documentation at https://docs.aws.amazon.com/lex/latest/dg/getting-started.html\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "lex"
                                      ]
                                    }
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "description": "Region of the Lex bot.\n\nCan be found in the Lex bot's URL as the value of region key.\n",
                                  "example": "us-east-1"
                                },
                                "bot_name": {
                                  "type": "string",
                                  "description": "The name of the Lex bot you would like to attach to the engine.\n\nCan be found in the Lex bot settings.\n",
                                  "example": "Bob"
                                },
                                "bot_alias": {
                                  "type": "string",
                                  "description": "The Lex bot alias.\n\nCreated and found in the Lex bot settings.\n",
                                  "example": "versionOne"
                                },
                                "key_id": {
                                  "type": "string",
                                  "description": "ID of the Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                },
                                "access_key": {
                                  "type": "string",
                                  "description": "The Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Google Dialogflow"
                            },
                            {
                              "required": [
                                "type",
                                "project_id",
                                "client_email",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the Google Dialogflow bot that the engine will be based on.\n\nGlia's AI Management uses Dialogflow API V2 for communication,\nsee https://cloud.google.com/dialogflow-enterprise/docs/reference/rest/v2-overview\n\nPrivate key in JSON format, associated with the Dialogflow service account, is needed to extract all necessary\nconfiguration parameters to create an engine.\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "dialogflow"
                                      ]
                                    }
                                  ]
                                },
                                "project_id": {
                                  "type": "string",
                                  "description": "Dialogflow project's ID:\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "dialog-agent-23"
                                },
                                "client_email": {
                                  "type": "string",
                                  "description": "E-mail associated to the Dialogflow bot.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "john.smith@example.com"
                                },
                                "private_key": {
                                  "type": "string",
                                  "description": "The Dialogflow bot's private key.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "----- BEGIN PRIVATE KEY ---- ..."
                                },
                                "confidence_level": {
                                  "type": "integer",
                                  "description": "The threshold the Dialogflow bot uses to process each response.\n\nIf the confidence returned by the engine is below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 100,
                                  "example": 68,
                                  "default": 0
                                },
                                "language_code": {
                                  "type": "string",
                                  "description": "Dialogflow bot languages that Glia supports.\n",
                                  "enum": [
                                    "en",
                                    "de",
                                    "da",
                                    "es",
                                    "fr"
                                  ],
                                  "example": "de",
                                  "default": "en"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Microsoft Azure"
                            },
                            {
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "description": " Properties of the Microsoft Azure bot that the engine will be based on.\nGlia's AI Management module uses Azure’s Direct Line API 3.0 for communication, see https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0 ",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "azure"
                                      ]
                                    }
                                  ]
                                },
                                "secret_key": {
                                  "type": "string",
                                  "description": "The Azure bot secret key.\n\nCan be generated and found in the bot's Direct Line channel section.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "IBM Bluemix and Watson"
                            },
                            {
                              "required": [
                                "type",
                                "workspace_id",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the IBM Watson bot that the engine will be based on.\n\n* AI Management uses IBM Watson Assistant API for communication,\nsee https://console.bluemix.net/apidocs/assistant\n* See Bluemix documentation on how to setup the Watson Assistant:\nhttps://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "bluemix"
                                      ]
                                    }
                                  ]
                                },
                                "workspace_id": {
                                  "type": "string",
                                  "description": "The ID of the Watson bot's workspace.\n\nCan be found in Watson assistant tool's deployment Credentials section\n"
                                },
                                "confidence_level": {
                                  "type": "number",
                                  "description": "The threshold used by the Watson bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "example": 0.75
                                },
                                "api_key": {
                                  "type": "string",
                                  "description": "The Watson bot's API key.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Custom"
                            },
                            {
                              "required": [
                                "type",
                                "endpoint_url",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the bot from the custom NLP provider.\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "custom"
                                      ]
                                    }
                                  ]
                                },
                                "endpoint_url": {
                                  "type": "string",
                                  "description": "Endpoint URL used by AI Management to send REST API requests (e.g. visitor's utterances) to the AI framework.\n\nAllowed protocol type: HTTPS.\n",
                                  "example": "https://example.com/custom/ai/framework/endpoint"
                                },
                                "vendor": {
                                  "type": "string",
                                  "description": "Optional name of the custom NLP service provider.\n",
                                  "example": "BotsUnlimited",
                                  "default": "custom"
                                },
                                "headers": {
                                  "type": "array",
                                  "description": "A set of key-value pairs that are sent as HTTP headers along with the REST request.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "Key-value pair to represent the HTTP header.\n",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "example": "Authentication: Basic integrator_username:integrator_password"
                                  },
                                  "minItems": 0,
                                  "maxItems": 3
                                },
                                "confidence_level": {
                                  "type": "number",
                                  "description": "The threshold used by the custom bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "example": 0.85,
                                  "default": 0
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "site_id",
                    "name",
                    "provider"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/omniguide/engines/{engine_id}": {
      "put": {
        "summary": "Update engine",
        "tags": [
          "Engines"
        ],
        "description": " Updates an existing AI engine.\nSupported engine types:\n* [Amazon Lex](https://docs.aws.amazon.com/lex/latest/dg/getting-started.html)\n* [Google Dialogflow](https://cloud.google.com/dialogflow/es/docs/reference/rest/v2-overview)\n* [Microsoft Azure](https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0)\n* [IBM Bluemix and Watson](https://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial)\n* Custom ",
        "parameters": [
          {
            "in": "path",
            "name": "engine_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of an engine.\n"
          }
        ],
        "requestBody": {
          "description": "The engine's configuration.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Descriptive name of the engine to distinguish it from the other engines.\n",
                        "example": "Lex Test Engine"
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional description of the engine, to give deeper input of its configuration or use cases.\n",
                        "example": "The only Lex engine configured for this site."
                      },
                      "provider": {
                        "oneOf": [
                          {
                            "allOf": [
                              {
                                "title": "Amazon Lex"
                              },
                              {
                                "type": "object",
                                "description": "Properties of the Amazon Lex bot that the engine will be based on.\n\nSee also Amason Lex documentation at https://docs.aws.amazon.com/lex/latest/dg/getting-started.html\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "lex"
                                        ]
                                      }
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "Region of the Lex bot.\n\nCan be found in the Lex bot's URL as the value of region key.\n",
                                    "example": "us-east-1"
                                  },
                                  "bot_name": {
                                    "type": "string",
                                    "description": "The name of the Lex bot you would like to attach to the engine.\n\nCan be found in the Lex bot settings.\n",
                                    "example": "Bob"
                                  },
                                  "bot_alias": {
                                    "type": "string",
                                    "description": "The Lex bot alias.\n\nCreated and found in the Lex bot settings.\n",
                                    "example": "versionOne"
                                  },
                                  "key_id": {
                                    "type": "string",
                                    "description": "ID of the Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                  },
                                  "access_key": {
                                    "type": "string",
                                    "description": "The Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Google Dialogflow"
                              },
                              {
                                "type": "object",
                                "description": "Properties of the Google Dialogflow bot that the engine will be based on.\n\nGlia's AI Management uses Dialogflow API V2 for communication,\nsee https://cloud.google.com/dialogflow-enterprise/docs/reference/rest/v2-overview\n\nPrivate key in JSON format, associated with the Dialogflow service account, is needed to extract all necessary\nconfiguration parameters to create an engine.\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "dialogflow"
                                        ]
                                      }
                                    ]
                                  },
                                  "project_id": {
                                    "type": "string",
                                    "description": "Dialogflow project's ID:\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "dialog-agent-23"
                                  },
                                  "client_email": {
                                    "type": "string",
                                    "description": "E-mail associated to the Dialogflow bot.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "john.smith@example.com"
                                  },
                                  "private_key": {
                                    "type": "string",
                                    "description": "The Dialogflow bot's private key.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                    "example": "----- BEGIN PRIVATE KEY ---- ..."
                                  },
                                  "confidence_level": {
                                    "type": "integer",
                                    "description": "The threshold the Dialogflow bot uses to process each response.\n\nIf the confidence returned by the engine is below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "example": 68,
                                    "default": 0
                                  },
                                  "language_code": {
                                    "type": "string",
                                    "description": "Dialogflow bot languages that Glia supports.\n",
                                    "enum": [
                                      "en",
                                      "de",
                                      "da",
                                      "es",
                                      "fr"
                                    ],
                                    "example": "de",
                                    "default": "en"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Microsoft Azure"
                              },
                              {
                                "type": "object",
                                "description": " Properties of the Microsoft Azure bot that the engine will be based on.\nGlia's AI Management module uses Azure’s Direct Line API 3.0 for communication, see https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0 ",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "azure"
                                        ]
                                      }
                                    ]
                                  },
                                  "secret_key": {
                                    "type": "string",
                                    "description": "The Azure bot secret key.\n\nCan be generated and found in the bot's Direct Line channel section.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "IBM Bluemix and Watson"
                              },
                              {
                                "type": "object",
                                "description": "Properties of the IBM Watson bot that the engine will be based on.\n\n* AI Management uses IBM Watson Assistant API for communication,\nsee https://console.bluemix.net/apidocs/assistant\n* See Bluemix documentation on how to setup the Watson Assistant:\nhttps://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "bluemix"
                                        ]
                                      }
                                    ]
                                  },
                                  "workspace_id": {
                                    "type": "string",
                                    "description": "The ID of the Watson bot's workspace.\n\nCan be found in Watson assistant tool's deployment Credentials section\n"
                                  },
                                  "confidence_level": {
                                    "type": "number",
                                    "description": "The threshold used by the Watson bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "example": 0.75
                                  },
                                  "api_key": {
                                    "type": "string",
                                    "description": "The Watson bot's API key.\n"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "title": "Custom"
                              },
                              {
                                "type": "object",
                                "description": "Properties of the bot from the custom NLP provider.\n",
                                "properties": {
                                  "type": {
                                    "allOf": [
                                      {
                                        "type": "string",
                                        "description": "NLP service provider.\n",
                                        "example": "lex"
                                      },
                                      {
                                        "enum": [
                                          "custom"
                                        ]
                                      }
                                    ]
                                  },
                                  "endpoint_url": {
                                    "type": "string",
                                    "description": "Endpoint URL used by AI Management to send REST API requests (e.g. visitor's utterances) to the AI framework.\n\nAllowed protocol type: HTTPS.\n",
                                    "example": "https://example.com/custom/ai/framework/endpoint"
                                  },
                                  "vendor": {
                                    "type": "string",
                                    "description": "Optional name of the custom NLP service provider.\n",
                                    "example": "BotsUnlimited",
                                    "default": "custom"
                                  },
                                  "headers": {
                                    "type": "array",
                                    "description": "A set of key-value pairs that are sent as HTTP headers along with the REST request.\n",
                                    "items": {
                                      "type": "object",
                                      "description": "Key-value pair to represent the HTTP header.\n",
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "example": "Authentication: Basic integrator_username:integrator_password"
                                    },
                                    "minItems": 0,
                                    "maxItems": 3
                                  },
                                  "confidence_level": {
                                    "type": "number",
                                    "description": "The threshold used by the custom bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "example": 0.85,
                                    "default": 0
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK\n\nEngine succesfully updated.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The engine's unique ID.\n",
                      "example": "abc12121-c223-461c-8659-d2362223433e"
                    },
                    "site_id": {
                      "type": "string",
                      "description": "The ID of the site the engine will belong to.\n",
                      "example": "def34343-s888-43ae-99e0-07a676e9a111"
                    },
                    "name": {
                      "type": "string",
                      "description": "Descriptive name of the engine to distinguish it from the other engines.\n",
                      "example": "Lex Test Engine"
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional description of the engine, to give deeper input of its configuration or use cases.\n",
                      "example": "The only Lex engine configured for this site."
                    },
                    "provider": {
                      "oneOf": [
                        {
                          "allOf": [
                            {
                              "title": "Amazon Lex"
                            },
                            {
                              "required": [
                                "type",
                                "region",
                                "bot_name",
                                "bot_alias"
                              ],
                              "type": "object",
                              "description": "Properties of the Amazon Lex bot that the engine will be based on.\n\nSee also Amason Lex documentation at https://docs.aws.amazon.com/lex/latest/dg/getting-started.html\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "lex"
                                      ]
                                    }
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "description": "Region of the Lex bot.\n\nCan be found in the Lex bot's URL as the value of region key.\n",
                                  "example": "us-east-1"
                                },
                                "bot_name": {
                                  "type": "string",
                                  "description": "The name of the Lex bot you would like to attach to the engine.\n\nCan be found in the Lex bot settings.\n",
                                  "example": "Bob"
                                },
                                "bot_alias": {
                                  "type": "string",
                                  "description": "The Lex bot alias.\n\nCreated and found in the Lex bot settings.\n",
                                  "example": "versionOne"
                                },
                                "key_id": {
                                  "type": "string",
                                  "description": "ID of the Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                },
                                "access_key": {
                                  "type": "string",
                                  "description": "The Lex bot's access key.\n\nCan be generated in AWS user's Security Credentials section.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Google Dialogflow"
                            },
                            {
                              "required": [
                                "type",
                                "project_id",
                                "client_email",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the Google Dialogflow bot that the engine will be based on.\n\nGlia's AI Management uses Dialogflow API V2 for communication,\nsee https://cloud.google.com/dialogflow-enterprise/docs/reference/rest/v2-overview\n\nPrivate key in JSON format, associated with the Dialogflow service account, is needed to extract all necessary\nconfiguration parameters to create an engine.\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "dialogflow"
                                      ]
                                    }
                                  ]
                                },
                                "project_id": {
                                  "type": "string",
                                  "description": "Dialogflow project's ID:\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "dialog-agent-23"
                                },
                                "client_email": {
                                  "type": "string",
                                  "description": "E-mail associated to the Dialogflow bot.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "john.smith@example.com"
                                },
                                "private_key": {
                                  "type": "string",
                                  "description": "The Dialogflow bot's private key.\n\nCan be found from Dialogflow's JSON key file generated in Service accounts section.\n",
                                  "example": "----- BEGIN PRIVATE KEY ---- ..."
                                },
                                "confidence_level": {
                                  "type": "integer",
                                  "description": "The threshold the Dialogflow bot uses to process each response.\n\nIf the confidence returned by the engine is below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 100,
                                  "example": 68,
                                  "default": 0
                                },
                                "language_code": {
                                  "type": "string",
                                  "description": "Dialogflow bot languages that Glia supports.\n",
                                  "enum": [
                                    "en",
                                    "de",
                                    "da",
                                    "es",
                                    "fr"
                                  ],
                                  "example": "de",
                                  "default": "en"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Microsoft Azure"
                            },
                            {
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "description": " Properties of the Microsoft Azure bot that the engine will be based on.\nGlia's AI Management module uses Azure’s Direct Line API 3.0 for communication, see https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-concepts?view=azure-bot-service-4.0 ",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "azure"
                                      ]
                                    }
                                  ]
                                },
                                "secret_key": {
                                  "type": "string",
                                  "description": "The Azure bot secret key.\n\nCan be generated and found in the bot's Direct Line channel section.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "IBM Bluemix and Watson"
                            },
                            {
                              "required": [
                                "type",
                                "workspace_id",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the IBM Watson bot that the engine will be based on.\n\n* AI Management uses IBM Watson Assistant API for communication,\nsee https://console.bluemix.net/apidocs/assistant\n* See Bluemix documentation on how to setup the Watson Assistant:\nhttps://cloud.ibm.com/docs/services/assistant?topic=assistant-getting-started#getting-started-tutorial\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "bluemix"
                                      ]
                                    }
                                  ]
                                },
                                "workspace_id": {
                                  "type": "string",
                                  "description": "The ID of the Watson bot's workspace.\n\nCan be found in Watson assistant tool's deployment Credentials section\n"
                                },
                                "confidence_level": {
                                  "type": "number",
                                  "description": "The threshold used by the Watson bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "example": 0.75
                                },
                                "api_key": {
                                  "type": "string",
                                  "description": "The Watson bot's API key.\n"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "title": "Custom"
                            },
                            {
                              "required": [
                                "type",
                                "endpoint_url",
                                "confidence_level"
                              ],
                              "type": "object",
                              "description": "Properties of the bot from the custom NLP provider.\n",
                              "properties": {
                                "type": {
                                  "allOf": [
                                    {
                                      "type": "string",
                                      "description": "NLP service provider.\n",
                                      "example": "lex"
                                    },
                                    {
                                      "enum": [
                                        "custom"
                                      ]
                                    }
                                  ]
                                },
                                "endpoint_url": {
                                  "type": "string",
                                  "description": "Endpoint URL used by AI Management to send REST API requests (e.g. visitor's utterances) to the AI framework.\n\nAllowed protocol type: HTTPS.\n",
                                  "example": "https://example.com/custom/ai/framework/endpoint"
                                },
                                "vendor": {
                                  "type": "string",
                                  "description": "Optional name of the custom NLP service provider.\n",
                                  "example": "BotsUnlimited",
                                  "default": "custom"
                                },
                                "headers": {
                                  "type": "array",
                                  "description": "A set of key-value pairs that are sent as HTTP headers along with the REST request.\n",
                                  "items": {
                                    "type": "object",
                                    "description": "Key-value pair to represent the HTTP header.\n",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "example": "Authentication: Basic integrator_username:integrator_password"
                                  },
                                  "minItems": 0,
                                  "maxItems": 3
                                },
                                "confidence_level": {
                                  "type": "number",
                                  "description": "The threshold used by the custom bot to process each response.\n\nIf the confidence returned by the  engineis below the threshold the response is discarded.\n",
                                  "minimum": 0,
                                  "maximum": 1,
                                  "example": 0.85,
                                  "default": 0
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "site_id",
                    "name",
                    "provider"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/omniguide/statistics/acceptance": {
      "post": {
        "summary": "Fetch acceptance",
        "tags": [
          "Usage statistics"
        ],
        "description": "Fetches the suggestions' acceptance statistics, showing how much the suggestions are actually used.\n\nThe user must have at least the manager access rights to perform this request.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs whose data is requested. Must not be empty.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "55555555-d325-4308-9e6e-f73cabcca1c3",
                          "66666666-d325-4308-9e6e-f73cabcca1c3"
                        ]
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to provided sites.",
                        "items": {
                          "type": "string"
                        },
                        "example": "[\n  77777777-d487-4ebd-8917-7e3b3a5f7da0,\n  88888888-d487-4ebd-8917-7e3b3a5f7da0,\n]\n"
                      },
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "Filter used to include engagements that have no queue.",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date.",
                        "example": "2019-05-30T01:46:38.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date.",
                        "example": "2019-05-31T12:46:38.000Z"
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Defines the granularity to bucket query results.",
                        "enum": [
                          "hour",
                          "day",
                          "week",
                          "month"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date",
                      "granularity"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggestion usage statistics.\n\n* `data` - Array of objects containing all of the filtered time buckets segregated by requested granularity.\n* `total` - Object containing aggregated data of all of the provided time buckets.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of objects containing all of the filtered time buckets segregated by requested granularity.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines starting date of the bucket.\n",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines end date of the bucket.",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "total": {
                            "type": "integer",
                            "description": "Total number of suggestions within the period.",
                            "example": 2
                          },
                          "accepted": {
                            "type": "integer",
                            "description": "Number of accepted suggestions. When similarity with operator message is >= 85%.\n",
                            "example": 1
                          },
                          "altered": {
                            "type": "integer",
                            "description": "Number of altered suggestions. When similarity with operator message is between 30% and 85%.\n",
                            "example": 0
                          },
                          "unused": {
                            "type": "integer",
                            "description": "Number of unused suggestions. When similarity with operator message is =< 30%.\n",
                            "example": 5
                          }
                        }
                      },
                      "example": [
                        {
                          "start": "2019-05-30T00:00:00.000Z",
                          "end": "2019-05-31T00:00:00.000Z",
                          "total": 3,
                          "accepted": 1,
                          "altered": 2,
                          "unused": 1
                        },
                        {
                          "start": "2019-05-31T00:00:00.000Z",
                          "end": "2019-06-01T00:00:00.000Z",
                          "total": 4,
                          "accepted": 2,
                          "altered": 0,
                          "unused": 2
                        }
                      ]
                    },
                    "total": {
                      "type": "object",
                      "description": "Object containing aggregated data of all of the provided time buckets.",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "accepted": {
                          "type": "integer"
                        },
                        "altered": {
                          "type": "integer"
                        },
                        "unused": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "total": 7,
                        "accepted": 3,
                        "altered": 1,
                        "unused": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Your bearer token has expired or you are not authorized to perform this request.\n"
          },
          "422": {
            "description": "Invalid input. Check if the request is correct."
          }
        }
      }
    },
    "/omniguide/statistics/frequency": {
      "post": {
        "summary": "Fetch frequency",
        "tags": [
          "Usage statistics"
        ],
        "description": "Feches the frequency statistics, showing the suggestions usage frequency per engagement.\n\nThe user must have at least the manager access rights to perform this request.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs whose data is requested. Must not be empty.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "55555555-d325-4308-9e6e-f73cabcca1c3",
                          "66666666-d325-4308-9e6e-f73cabcca1c3"
                        ]
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to provided sites.",
                        "items": {
                          "type": "string"
                        },
                        "example": "[\n  77777777-d487-4ebd-8917-7e3b3a5f7da0,\n  88888888-d487-4ebd-8917-7e3b3a5f7da0,\n]\n"
                      },
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "Filter used to include engagements that have no queue.",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date.",
                        "example": "2019-05-30T01:46:38.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date.",
                        "example": "2019-05-31T12:46:38.000Z"
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Defines the granularity to bucket query results.",
                        "enum": [
                          "hour",
                          "day",
                          "week",
                          "month"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date",
                      "granularity"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggestion usage frequency per engagement.\n\n* `data` - Array of objects containing all of the filtered time buckets segregated by requested granularity.\n* `total` - Object containing aggregated data of all of the provided time buckets.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of objects containing all of the filtered time buckets segregated by requested granularity.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines starting date of the bucket.",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines end date of the bucket.",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "engagements": {
                            "type": "integer",
                            "description": "Number of engagements within time bucket.",
                            "example": 2
                          },
                          "visitor_messages": {
                            "type": "integer",
                            "description": "Number of visitor messages within time bucket.",
                            "example": 5
                          },
                          "suggestions": {
                            "type": "integer",
                            "description": "Number of suggestions within time bucket.",
                            "example": 1
                          },
                          "suggestion_rate": {
                            "type": "number",
                            "description": "Rate of suggestions against total messages.",
                            "example": 0.14
                          },
                          "suggestions_per_engagement": {
                            "type": "number",
                            "description": "Rate of suggestions per engagement.",
                            "example": 1.7
                          }
                        }
                      },
                      "example": [
                        {
                          "start": "2019-05-30T00:00:00.000Z",
                          "end": "2019-05-31T00:00:00.000Z",
                          "engagements": 3,
                          "visitor_messages": 1,
                          "suggestions": 1,
                          "suggestion_rate": 1,
                          "suggestions_per_engagement": 3
                        },
                        {
                          "start": "2019-05-30T00:00:00.000Z",
                          "end": "2019-05-31T00:00:00.000Z",
                          "engagements": 2,
                          "visitor_messages": 5,
                          "suggestions": 5,
                          "suggestion_rate": 1,
                          "suggestions_per_engagement": 2.5
                        }
                      ]
                    },
                    "total": {
                      "type": "object",
                      "description": "Object containing aggregated data of all of the provided time buckets.\n",
                      "properties": {
                        "engagements": {
                          "type": "integer"
                        },
                        "visitor_messages": {
                          "type": "integer"
                        },
                        "suggestions": {
                          "type": "integer"
                        },
                        "suggestion_rate": {
                          "type": "number"
                        },
                        "suggestions_per_engagement": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "engagements": 3,
                        "visitor_messages": 8,
                        "suggestions": 8,
                        "suggestion_rate": 1.2,
                        "suggestions_per_engagement": 2.67
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Your bearer token has expired or you are not authorized to perform this request.\n"
          },
          "422": {
            "description": "Invalid input. Check if the request is correct."
          }
        }
      }
    },
    "/omniguide/statistics/average_handle_time": {
      "post": {
        "summary": "Fetch handle time",
        "tags": [
          "Usage statistics"
        ],
        "description": "Fetches the average handle time statistics, showing the average engagement duration.\n\nThe user must have at least the manager access rights to perform this request.\n\nNotes:\n* AI Optimizer reports only the statistics for the **operator assistants**.\n* If you are interested in the **virtual assistants'** statistics, turn to the [Reporting](ref:historical-reporting).\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs whose data is requested. Must not be empty.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "55555555-d325-4308-9e6e-f73cabcca1c3",
                          "66666666-d325-4308-9e6e-f73cabcca1c3"
                        ]
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to provided sites.",
                        "items": {
                          "type": "string"
                        },
                        "example": "[\n  77777777-d487-4ebd-8917-7e3b3a5f7da0,\n  88888888-d487-4ebd-8917-7e3b3a5f7da0,\n]\n"
                      },
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "Filter used to include engagements that have no queue.",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date.",
                        "example": "2019-05-30T01:46:38.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date.",
                        "example": "2019-05-31T12:46:38.000Z"
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Defines the granularity to bucket query results.",
                        "enum": [
                          "hour",
                          "day",
                          "week",
                          "month"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date",
                      "granularity"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Average handle time data, including the comparison of handle times with and without virtual assistants.\n\n* `data` - Array of objects containing all of the filtered time buckets segregated by requested granularity.\n* `total` - Object containing aggregated data of all of the provided time buckets.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of objects containing all of the available time buckets segregated by requested granularity.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines starting date of the bucket.\n",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "end": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines end date of the bucket.",
                            "example": "2019-05-30T00:00:00.000Z"
                          },
                          "without_omniguide": {
                            "type": "number",
                            "description": "Average handle time without Omniguide usage.",
                            "example": 21.57
                          },
                          "average_reduction": {
                            "description": "Average handle time reduction per engagement.",
                            "type": "number",
                            "example": -13.43
                          },
                          "total_reduction": {
                            "description": "Total average handle time reduction.",
                            "type": "number",
                            "example": -26.86
                          },
                          "average_total": {
                            "description": "Total average handle time.",
                            "type": "number",
                            "example": 36.2
                          }
                        }
                      },
                      "example": [
                        {
                          "start": "2019-05-30T00:00:00.000Z",
                          "end": "2019-05-31T00:00:00.000Z",
                          "without_omniguide": 45.54,
                          "average_reduction": 8.54,
                          "total_reduction": 8.54,
                          "average_total": 0
                        },
                        {
                          "start": "2019-05-30T00:00:00.000Z",
                          "end": "2019-05-31T00:00:00.000Z",
                          "without_omniguide": 21.57,
                          "average_reduction": -13.43,
                          "total_reduction": -26.86,
                          "average_total": 10
                        }
                      ]
                    },
                    "total": {
                      "type": "object",
                      "description": "Object containing aggregated data of all of the provided time buckets.\n",
                      "properties": {
                        "engagements": {
                          "type": "integer"
                        },
                        "visitor_messages": {
                          "type": "integer"
                        },
                        "suggestions": {
                          "type": "integer"
                        },
                        "suggestion_rate": {
                          "type": "number"
                        },
                        "suggestions_per_engagement": {
                          "type": "number"
                        }
                      },
                      "example": {
                        "engagements": 3,
                        "visitor_messages": 8,
                        "suggestions": 8,
                        "suggestion_rate": 1.03,
                        "suggestions_per_engagement": 2.67
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Your bearer token has expired or you are not authorized to perform this request.\n"
          },
          "422": {
            "description": "Invalid input. Check if the request is correct."
          }
        }
      }
    },
    "/omniguide/statistics/suggestions": {
      "post": {
        "summary": "List suggestions",
        "tags": [
          "Usage statistics"
        ],
        "description": "Pulls data for the list of operator assistant's suggestions.\n\nThe data is sorted by `sort` (by default by `accepted_rate`) and `sort_order` parameters.\n\nThe user must have at least the manager access rights to perform this request.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs whose data is requested. Must not be empty.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "55555555-d325-4308-9e6e-f73cabcca1c3",
                          "66666666-d325-4308-9e6e-f73cabcca1c3"
                        ]
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to provided sites.",
                        "items": {
                          "type": "string"
                        },
                        "example": "[\n  77777777-d487-4ebd-8917-7e3b3a5f7da0,\n  88888888-d487-4ebd-8917-7e3b3a5f7da0,\n]\n"
                      },
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "Filter used to include engagements that have no queue.",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date.",
                        "example": "2019-05-30T01:46:38.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date.",
                        "example": "2019-05-31T12:46:38.000Z"
                      },
                      "acceptance": {
                        "type": "array",
                        "description": "Array of Strings defining the included acceptance values for the response.\n",
                        "items": {
                          "type": "string",
                          "enum": [
                            "accepted",
                            "altered",
                            "unused"
                          ]
                        },
                        "example": [
                          "accepted"
                        ]
                      },
                      "search_phrase": {
                        "type": "string",
                        "description": "A string used to filter by `suggestion`.",
                        "example": "insurance"
                      },
                      "sort": {
                        "allOf": [
                          {
                            "type": "string",
                            "description": "A string defining sort order by specific column.",
                            "enum": [
                              "suggested_count",
                              "accepted_count",
                              "altered_count",
                              "unused_count",
                              "accepted_rate",
                              "altered_rate",
                              "unused_rate"
                            ]
                          },
                          {
                            "default": "accepted_rate"
                          }
                        ]
                      },
                      "sort_order": {
                        "type": "string",
                        "description": "Intertwined with field sort and applies the `asc` or `desc` order relative to it.\n",
                        "enum": [
                          "asc",
                          "desc"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of suggestions with their usage statistics.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "description": "Array of objects, each representing a suggestion providing detailed information about its usage.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "suggestion_id": {
                            "type": "string",
                            "description": "A UUID of a suggestion which usages are being fetched.",
                            "example": "99999999-d325-4308-9e6e-f73cabcca1c3"
                          },
                          "suggestion": {
                            "type": "string",
                            "description": "Suggestion string from operator assistant.",
                            "example": "Welcome!"
                          },
                          "suggested_count": {
                            "type": "integer",
                            "description": "Number of times suggestion was suggested.",
                            "example": 32
                          },
                          "accepted_count": {
                            "type": "integer",
                            "description": "Number of times suggestion was used by the operator.",
                            "example": 3
                          },
                          "altered_count": {
                            "type": "integer",
                            "description": "Number of times suggestion was altered by the operator.",
                            "example": 1
                          },
                          "unused_count": {
                            "type": "integer",
                            "description": "Number of times suggestion was not used by the operator.",
                            "example": 0
                          },
                          "accepted_rate": {
                            "type": "number",
                            "description": "Rate when suggestion similarity with operator message was >= 85%.",
                            "example": 0.5
                          },
                          "altered_rate": {
                            "type": "number",
                            "description": "Rate when suggestion similarity with operator message was between 30% and 85%.",
                            "example": 0.14
                          },
                          "unused_rate": {
                            "type": "number",
                            "description": "Rate hen suggestion similarity with operator message was =< 30%.",
                            "example": 0.23
                          }
                        }
                      },
                      "example": [
                        {
                          "suggestion_id": "36457a4f-ea2e-4bf9-b474-93a38de55ad6",
                          "suggestion": "Response from the operator assistant",
                          "suggested_count": 22,
                          "accepted_count": 11,
                          "altered_count": 3,
                          "unused_count": 8,
                          "accepted_rate": 0.5,
                          "altered_rate": 0.14,
                          "unused_rate": 0.36
                        },
                        {
                          "suggestion_id": "fc56f9ec-5e17-4c37-b9e4-e77972ea61aa",
                          "suggestion": "hi",
                          "suggested_count": 1,
                          "accepted_count": 1,
                          "altered_count": 0,
                          "unused_count": 0,
                          "accepted_rate": 1,
                          "altered_rate": 0,
                          "unused_rate": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Your bearer token has expired or you are not authorized to perform this request.\n"
          },
          "422": {
            "description": "Invalid input. Check if the request is correct."
          }
        }
      }
    },
    "/omniguide/statistics/suggestion_usages": {
      "post": {
        "summary": "Fetch suggestion(s)",
        "tags": [
          "Usage statistics"
        ],
        "description": "Fetch suggestion usages endpoint can be used to:\n\n* fetch suggestion usages data for a **specific suggestion** by specifying the `suggestion_id` parameter;\n\n* fetch suggestion usages data for a **set of suggestions** of a certain site(s);\n\n* download suggestion usages data in a **specific format**.\n\nIn order to download the requested suggestion usages data, an `Accept` header must set to be either:\n\n  * `application/vnd.salemove.v1+json`\n  * `application/vnd.salemove.v1+csv`\n\nThe user must have at least the manager access rights to perform this request.\n",
        "requestBody": {
          "required": true,
          "description": "### Fetching data for a specific suggestion\n\n* Specify the `suggestion_id`.\n\nData will be provided in a default `application/vnd.salemove.v1+json` format.\n\n### Fetching data for a set of suggestions\n\n* Omit the `suggestion_id` parameter.\n\nData will be provided in a default `application/vnd.salemove.v1+json` format.\n\n### Downloading data for a set of suggestions\n\n* Define the `Accept` header according to which format you want the data downloaded in:\n  - `application/vnd.salemove.v1+json`, or\n  - `application/vnd.salemove.v1+csv`.\n",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "properties": {
                      "suggestion_id": {
                        "type": "string",
                        "description": "A UUID of a suggestion which usages are being fetched.",
                        "example": "99999999-d325-4308-9e6e-f73cabcca1c3"
                      },
                      "site_ids": {
                        "type": "array",
                        "description": "A list of site IDs whose data is requested. Must not be empty.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "55555555-d325-4308-9e6e-f73cabcca1c3",
                          "66666666-d325-4308-9e6e-f73cabcca1c3"
                        ]
                      },
                      "queue_ids": {
                        "type": "array",
                        "description": "A list of queue IDs. All queues must belong to provided sites.",
                        "items": {
                          "type": "string"
                        },
                        "example": "[\n  77777777-d487-4ebd-8917-7e3b3a5f7da0,\n  88888888-d487-4ebd-8917-7e3b3a5f7da0,\n]\n"
                      },
                      "include_without_queues": {
                        "type": "boolean",
                        "description": "Filter used to include engagements that have no queue.",
                        "default": false,
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "start_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query start date.",
                        "example": "2019-05-30T01:46:38.000Z"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "An ISO-8601 timestamp. Defines the query end date.",
                        "example": "2019-05-31T12:46:38.000Z"
                      },
                      "acceptance": {
                        "type": "array",
                        "description": "Array of Strings defining the included acceptance values for the response.\n",
                        "items": {
                          "type": "string",
                          "enum": [
                            "accepted",
                            "altered",
                            "unused"
                          ]
                        },
                        "example": [
                          "accepted"
                        ]
                      }
                    }
                  },
                  {
                    "required": [
                      "site_ids",
                      "start_date",
                      "end_date"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Depending on the provided request parameters, response can be either\n\n* a usage statistics of a specific suggestion, or\n* a usage statistics of all the suggestions of a specific site.\n\nIn the result, each suggestion usage is represented as a separate entry:\n * Containing:\n   - `engagement_id`,\n   - `visitor_message`,\n   - `operator_message`,\n   - `similarity`,\n   - `date`,\n * Sorted by:\n   - `date` in descending order.\n",
            "content": {
              "application/vnd.salemove.v1+json": {
                "schema": {
                  "properties": {
                    "suggestion": {
                      "type": "object",
                      "description": "Object representing suggestion which usage is being fetched.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A UUID of a suggestion which usages are being fetched.",
                          "example": "99999999-d325-4308-9e6e-f73cabcca1c3"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the suggestion.",
                          "example": "Offer the visitor CoBrowsing."
                        }
                      },
                      "example": {
                        "id": "36457a4f-ea2e-4bf9-b474-93a38de55ad6",
                        "content": "Response from operator assistant"
                      }
                    },
                    "suggestion_usages": {
                      "type": "array",
                      "description": "Array of objects, each representing usage of fetched suggestion.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "visitor_message": {
                            "type": "string",
                            "description": "A message from visitor.",
                            "example": "Hello"
                          },
                          "operator_message": {
                            "type": "string",
                            "description": "A message from operator assistant.",
                            "example": "How can I help you?"
                          },
                          "similarity": {
                            "type": "number",
                            "description": "Similarity with operator message based on Levenshtein distance score.\n",
                            "example": "Response from operator assistant, however this is altered now"
                          },
                          "engagement_id": {
                            "type": "string",
                            "description": "Engagement id",
                            "example": "47ae591a-963b-42c8-91ee-bbce8a89edac"
                          },
                          "date": {
                            "type": "string",
                            "description": "An ISO-8601 timestamp. Defines date of sent message.",
                            "example": "2019-05-30T00:00:00.000Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "visitor_message": "Hello",
                          "operator_message": "Response from operator assistant",
                          "similarity": 1,
                          "engagement_id": "dcd9b9ef-c62b-4d2b-801e-f57ea43ffd8d",
                          "date": "2019-05-30T05:38:01.199Z"
                        },
                        {
                          "visitor_message": "Hello once again",
                          "operator_message": "Response from operator assistant, however this is altered now",
                          "similarity": 0.45,
                          "engagement_id": "47ae591a-963b-42c8-91ee-bbce8a89edac",
                          "date": "2019-05-23T11:01:28.255Z"
                        },
                        {
                          "visitor_message": "Hello, can you help me please?",
                          "operator_message": "Hello",
                          "similarity": 0,
                          "engagement_id": "da03a14a-9e3a-4d36-9da8-24e841202b8a",
                          "date": "2019-05-08T11:36:00.638Z"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.salemove.v1+csv": {
                "schema": {
                  "type": "string",
                  "example": "visitor_message,suggestion,operator_message,similarity,suggestion_id,engagement_id,date\n\"Hello again my friend\",\"Response from operator assistant\",\"Response from operator assistant altered \",0.72,36457a4f-ea2e-4bf9-b474-93a38de55ad6,dcd9b9ef-c62b-4d2b-801e-f57ea43ffd8d,2019-05-30T05:38:10.364Z\n\"Hello once again\",\"Response from operator assistant\",\"Response from operator assistant, however this is altered now\",0.45,36457a4f-ea2e-4bf9-b474-93a38de55ad6,47ae591a-963b-42c8-91ee-bbce8a89edac,2019-05-23T11:01:28.255Z\n\"Hello, can you help me please?\",\"Response from operator assistant\",\"Hello\",0.00,36457a4f-ea2e-4bf9-b474-93a38de55ad6,da03a14a-9e3a-4d36-9da8-24e841202b8a,2019-05-08T11:36:00.638Z\n"
                }
              }
            }
          },
          "401": {
            "description": "Your bearer token has expired or you are not authorized to perform this request.\n"
          },
          "422": {
            "description": "Invalid input. Check if the request is correct."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
